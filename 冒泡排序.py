## 冒泡排序（升序）：
##   第一轮比较：从第一个元素开始，按顺序对列表中所有N个元素中连续的两个元素进行两两比较，如果两者不满足升序关系则交换。第一轮比较过后，最大数将下沉到列表最后。
##   第二轮比较：从第一个元素开始，对列表中前N-1个元素进行两两比较，使次大数沉到最后。
##   依此类推，N-1轮后，排序完毕

"""
a = [12, 21, 43, 87, 90, 77, 65, 43, 32, 21, 32]
for i in range(len(a)-1):
    for j in range(len(a)-1-i):
        if a[j] > a[j+1]:
            tmp = a[j]
            a[j] =a[j+1]
            a[j+1] = tmp
print(a)
"""

##冒泡排序算法的改进
##  如果在某一轮比较中，一次交换也没有执行过，就说明已经排好序了
a = [12, 21, 43, 87, 90, 77, 65, 43, 32, 21, 32]
for i in range(len(a)-1):
    flag = True
    for j in range(len(a)-1-i):
        if a[j] > a[j+1]:
            tmp = a[j]
            a[j] =a[j+1]
            a[j+1] = tmp
            flag = False
    if flag == True:
        break
print(a)


##冒泡排序算法的分析
##  算法的主要时间消耗是比较的次数
##  冒泡排序共需比较N-1轮，总共的比较次数为(N-1)+(N-2)+┈+2+1=N(N-1)/2次
##  冒泡排序执行交换的次数不确定
##  冒泡排序是一种效率很低的排序算法


